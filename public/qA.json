[
    {
        "id": 1,
        "question": "How will you improve the performance of a React Application?",
        "answer": "Keeping component state local where necessary. Memoizing React components to prevent unnecessary re-renders. Code-splitting in React using dynamic import(). Windowing or list virtualization in React. Lazy loading images in React."
    },
    {
        "id": 2,
        "question": "What are the different ways to manage a state in a React application?",
        "answer": "For simple web application we use useState is easiest hooks. But we manage state in larger application it is so much difficult to manage state using useState. There are several kind of other option to manage state. These are useContext, useReducer, Custom Hooks and Redux. These all are use to manage state."
    },
    {
        "id": 3,
        "question": "Why you do not set the state directly in React?",
        "answer": "when we update the state of a component all it's children are going to be rendered as well. or our entire component tree rendered. But when i say our entire component tree is rendered that doesn’t mean that the entire DOM is updated. when a component is rendered we basically get a react element, so that is updating our virtual dom. React will then look at the virtual DOM, it also has a copy of the old virtual DOM, that is why we shouldn’t update the state directly, so we can have two different object references in memory, we have the old virtual DOM as well as the new virtual DOM. then react will figure out what is changed and based on that it will update the real DOM accordingly."
    },
    {
        "id": 4,
        "question": "You have an array of products. Each product has a name, price, description, etc. How will you implement a search to find products by name?",
        "answer": "First I design ui. Then I get the input which you went to search. Then check the the search text into the array using include method. After that I show the result."
    },
    {
        "id": 5,
        "question": "What is a unit test? Why should write unit tests?",
        "answer": "UNIT TESTING is a type of software testing where individual units or components of a software are tested. The purpose is to validate that each unit of the software code performs as expected. Unit Testing is done during the development (coding phase) of an application by the developers. Unit Tests isolate a section of code and verify its correctness. A unit may be an individual function, method, procedure, module, or object. Unit tests help to fix bugs early in the development cycle and save costs. It helps the developers to understand the testing code base and enables them to make changes quickly Good unit tests serve as project documentation. Unit tests help with code re-use. Migrate both your code and your tests to your new project. Tweak the code until the tests run again."
    }
]